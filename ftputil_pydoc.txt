Python Library Documentation: module ftputil

NAME
    ftputil - higher level support for FTP sessions

FILE
    ftputil.py

DESCRIPTION
    FTPHost objects
        This class resembles the os module's interface to
        ordinary file systems. In addition, it provides a
        method file which will return file-objects correspond-
        ing to remote files.
    
        # example session
        host = ftputil.FTPHost('ftp.domain.com', 'me', 'secret')
        print host.getcwd()  # e. g. '/home/me'
        source = host.file('sourcefile', 'r')
        host.mkdir('newdir')
        host.chdir('newdir')
        target = host.file('targetfile', 'w')
        host.copyfileobj(source, target)
        source.close()
        target.close()
        host.remove('targetfile')
        host.chdir(host.pardir)
        host.rmdir('newdir')
        host.close()
    
        There are also shortcuts for uploads and downloads:
    
        host.upload(local_file, remote_file)
        host.download(remote_file, local_file)
    
        Both accept an additional mode parameter. If it's 'b'
        the transfer mode will be for binary files.
    
    FTPFile objects
        FTPFile objects are constructed via the file method of
        FTPHost objects. FTPFile objects support the usual file
        operations for non-seekable files (read, readline,
        readlines, xreadlines, write, writelines, close).
    
    Note: ftputil currently is not threadsafe. More specifically,
          you can use different FTPHost objects in different
          threads but not using a single FTPHost object in
          different threads.

CLASSES
    FTPError
        FTPIOError(FTPError, exceptions.IOError)
        FTPOSError(FTPError, exceptions.OSError)
            ParserError
            PermanentError
            TemporaryError
        RootDirError
    FTPHost
    _FTPFile
    _Path
    _XReadlines
    __builtin__.tuple(__builtin__.object)
        _Stat
    
    class FTPError
     |  General error class
     |  
     |  Methods defined here:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = 'General error class'
     |  
     |  __module__ = 'ftputil'
    
    class FTPHost
     |  FTP host class
     |  
     |  Methods defined here:
     |  
     |  _FTPHost__get_modes = __get_modes(self, mode)
     |      Return modes for source and target file.
     |  
     |  __del__(self)
     |  
     |  __init__(self, *args, **kwargs)
     |      Abstract initialization of FTPHost object.
     |  
     |  _available_child(self)
     |      Return an available (i. e. one whose _file object is closed)
     |      child (FTPHost object) from the pool of children or None if
     |      there aren't any.
     |  
     |  _copy(self)
     |      Return a copy of this FTPHost object.
     |  
     |  _make_session(self)
     |      Return a new session object according to the current state
     |      of this FTPHost instance.
     |  
     |  _parse_line(self, line, fail=1)
     |      Return _Stat instance corresponding to the given text line.
     |  
     |  _parse_robin_line(self, line)
     |      Return _Stat instance corresponding to the given text line
     |      from a MS ROBIN FTP server. Exceptions are caught in
     |      _parse_line.
     |  
     |  _parse_unix_line(self, line)
     |      Return _Stat instance corresponding to the given text line.
     |      Exceptions are caught in _parse_line.
     |  
     |  _stat_candidates(self, lines, wanted_name)
     |      Return candidate lines for further analysis.
     |  
     |  chdir(self, path)
     |      Change the directory on the host.
     |  
     |  close(self)
     |      Close host connection.
     |  
     |  copyfileobj(self, source, target, length=65536)
     |      Copy data from file-like object source to file-like object target.
     |  
     |  download(self, source, target, mode='')
     |      Download a file from the remote source (name) to the local
     |      target (name). The argument mode is an empty string or 'a' for
     |      text copies, or 'b' for binary copies.
     |  
     |  download_if_newer(self, source, target, mode='')
     |      Download a file only if it's newer than the target on the
     |      local host or if the target file does not exist.
     |  
     |  file(self, path, mode='r')
     |      Return an open file(-like) object which is associated with
     |      this FTPHost object.
     |      
     |      This method tries to reuse a child but will generate a new one
     |      if none is available.
     |  
     |  getcwd(self)
     |      Return the current path name.
     |  
     |  listdir(self, path)
     |      Return a list with directories, files etc. in the directory
     |      named path.
     |  
     |  lstat(self, path)
     |      Return an object similar to that returned by os.lstat.
     |  
     |  mkdir(self, path, mode=None)
     |      Make the directory path on the remote host. The argument mode
     |      is ignored and only "supported" for similarity with os.mkdir.
     |  
     |  open(self, path, mode='r')
     |  
     |  remove(self, path)
     |      Remove the given file.
     |  
     |  rename(self, source, target)
     |      Rename the source on the FTP host to target.
     |  
     |  rmdir(self, path)
     |      Remove the directory on the remote host.
     |  
     |  stat(self, path)
     |      Return info from a stat call.
     |  
     |  unlink(self, path)
     |      Remove the given file.
     |  
     |  upload(self, source, target, mode='')
     |      Upload a file from the local source (name) to the remote
     |      target (name). The argument mode is an empty string or 'a' for
     |      text copies, or 'b' for binary copies.
     |  
     |  upload_if_newer(self, source, target, mode='')
     |      Upload a file only if it's newer than the target on the
     |      remote host or if the target file does not exist.
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = 'FTP host class'
     |  
     |  __module__ = 'ftputil'
     |  
     |  _month_numbers = {'apr': 4, 'aug': 8, 'dec': 12, 'feb': 2, 'jan': 1, '...
    
    class FTPIOError(FTPError, exceptions.IOError)
     |  Method resolution order:
     |      FTPIOError
     |      FTPError
     |      exceptions.IOError
     |      exceptions.EnvironmentError
     |      exceptions.StandardError
     |      exceptions.Exception
     |  
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = None
     |  
     |  __module__ = 'ftputil'
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FTPError:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from exceptions.Exception:
     |  
     |  __getitem__(...)
    
    class FTPOSError(FTPError, exceptions.OSError)
     |  Method resolution order:
     |      FTPOSError
     |      FTPError
     |      exceptions.OSError
     |      exceptions.EnvironmentError
     |      exceptions.StandardError
     |      exceptions.Exception
     |  
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = None
     |  
     |  __module__ = 'ftputil'
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FTPError:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from exceptions.Exception:
     |  
     |  __getitem__(...)
    
    class ParserError(FTPOSError)
     |  Method resolution order:
     |      ParserError
     |      FTPOSError
     |      FTPError
     |      exceptions.OSError
     |      exceptions.EnvironmentError
     |      exceptions.StandardError
     |      exceptions.Exception
     |  
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = None
     |  
     |  __module__ = 'ftputil'
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FTPError:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from exceptions.Exception:
     |  
     |  __getitem__(...)
    
    class PermanentError(FTPOSError)
     |  Method resolution order:
     |      PermanentError
     |      FTPOSError
     |      FTPError
     |      exceptions.OSError
     |      exceptions.EnvironmentError
     |      exceptions.StandardError
     |      exceptions.Exception
     |  
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = None
     |  
     |  __module__ = 'ftputil'
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FTPError:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from exceptions.Exception:
     |  
     |  __getitem__(...)
    
    class RootDirError(FTPError)
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = None
     |  
     |  __module__ = 'ftputil'
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FTPError:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
    
    class TemporaryError(FTPOSError)
     |  Method resolution order:
     |      TemporaryError
     |      FTPOSError
     |      FTPError
     |      exceptions.OSError
     |      exceptions.EnvironmentError
     |      exceptions.StandardError
     |      exceptions.Exception
     |  
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = None
     |  
     |  __module__ = 'ftputil'
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FTPError:
     |  
     |  __init__(self, ftp_exception)
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from exceptions.Exception:
     |  
     |  __getitem__(...)
    
    class _FTPFile
     |  Represents a file-like object connected to an FTP host.
     |  File and socket are closed appropriately if the close
     |  operation is requested.
     |  
     |  Methods defined here:
     |  
     |  __del__(self)
     |  
     |  __getattr__(self, attr_name)
     |      Delegate unknown attribute requests to the file.
     |  
     |  __init__(self, host)
     |      Construct the file(-like) object.
     |  
     |  _open(self, path, mode)
     |      Open the remote file with given pathname and mode.
     |  
     |  close(self)
     |      Close the FTPFile.
     |  
     |  read(self, *args)
     |      Return read bytes, normalized if in text transfer mode.
     |  
     |  readline(self, *args)
     |      Return one read line, normalized if in text transfer mode.
     |  
     |  readlines(self, *args)
     |      Return read lines, normalized if in text transfer mode.
     |  
     |  write(self, data)
     |      Write data to file. Do linesep conversion for text mode.
     |  
     |  writelines(self, lines)
     |      Write lines to file. Do linesep conversion for text mode.
     |  
     |  xreadlines(self)
     |      Return an appropriate xreadlines object with
     |      built-in line separator conversion support.
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = '\n    Represents a file-like object connected t... if the c...
     |  
     |  __module__ = 'ftputil'
    
    class _Path
     |  Support class resembling os.path, accessible from the
     |  FTPHost() object e. g. as FTPHost().path.abspath(path).
     |  Hint: substitute os with the FTPHost() object.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, host)
     |  
     |  abspath(self, path)
     |      Return an absolute path.
     |  
     |  exists(self, path)
     |  
     |  getmtime(self, path)
     |  
     |  getsize(self, path)
     |  
     |  isdir(self, path)
     |  
     |  isfile(self, path)
     |      # check whether a path is a regular file/dir/link;
     |      #  for the first two cases follow links (like in os.path)
     |  
     |  islink(self, path)
     |  
     |  split(self, path)
     |  
     |  walk(self, top, func, arg)
     |      Directory tree walk with callback function.
     |      
     |      For each directory in the directory tree rooted at top
     |      (including top itself, but excluding '.' and '..'), call
     |      func(arg, dirname, fnames). dirname is the name of the
     |      directory, and fnames a list of the names of the files and
     |      subdirectories in dirname (excluding '.' and '..').  func may
     |      modify the fnames list in-place (e.g. via del or slice
     |      assignment), and walk will only recurse into the
     |      subdirectories whose names remain in fnames; this can be used
     |      to implement a filter, or to impose a specific order of
     |      visiting.  No semantics are defined for, or required of, arg,
     |      beyond that arg is always passed to func.  It can be used,
     |      e.g., to pass a filename pattern, or a mutable object designed
     |      to accumulate statistics.  Passing None for arg is common.
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = '\n    Support class resembling os.path, accessi...: substit...
     |  
     |  __module__ = 'ftputil'
    
    class _Stat(__builtin__.tuple)
     |  Support class resembling a tuple like that which is returned
     |  from os.(l)stat.
     |  
     |  Method resolution order:
     |      _Stat
     |      __builtin__.tuple
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __getattr__(self, attr_name)
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions defined here:
     |  
     |  __dict__ = <dict-proxy object at 0x106a0c>
     |  
     |  __doc__ = '\n    Support class resembling a tuple like that which is r...
     |  
     |  __module__ = 'ftputil'
     |  
     |  _index_mapping = {'_st_name': 10, '_st_target': 11, 'st_atime': 7, 'st...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from __builtin__.tuple:
     |  
     |  __add__(...)
     |      x.__add__(y) <==> x+y
     |  
     |  __contains__(...)
     |      x.__contains__(y) <==> y in x
     |  
     |  __eq__(...)
     |      x.__eq__(y) <==> x==y
     |  
     |  __ge__(...)
     |      x.__ge__(y) <==> x>=y
     |  
     |  __getattribute__(...)
     |      x.__getattribute__('name') <==> x.name
     |  
     |  __getitem__(...)
     |      x.__getitem__(y) <==> x[y]
     |  
     |  __getslice__(...)
     |      x.__getslice__(i, j) <==> x[i:j]
     |  
     |  __gt__(...)
     |      x.__gt__(y) <==> x>y
     |  
     |  __hash__(...)
     |      x.__hash__() <==> hash(x)
     |  
     |  __le__(...)
     |      x.__le__(y) <==> x<=y
     |  
     |  __len__(...)
     |      x.__len__() <==> len(x)
     |  
     |  __lt__(...)
     |      x.__lt__(y) <==> x<y
     |  
     |  __mul__(...)
     |      x.__mul__(n) <==> x*n
     |  
     |  __ne__(...)
     |      x.__ne__(y) <==> x!=y
     |  
     |  __repr__(...)
     |      x.__repr__() <==> repr(x)
     |  
     |  __rmul__(...)
     |      x.__rmul__(n) <==> n*x
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions inherited from __builtin__.tuple:
     |  
     |  __new__ = <built-in method __new__ of type object at 0x17bb3c30>
     |      T.__new__(S, ...) -> a new object with type S, a subtype of T
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from __builtin__.object:
     |  
     |  __delattr__(...)
     |      x.__delattr__('name') <==> del x.name
     |  
     |  __init__(...)
     |      x.__init__(...) initializes x; see x.__class__.__doc__ for signature
     |  
     |  __reduce__(...)
     |      helper for pickle
     |  
     |  __setattr__(...)
     |      x.__setattr__('name', value) <==> x.name = value
     |  
     |  __str__(...)
     |      x.__str__() <==> str(x)
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions inherited from __builtin__.object:
     |  
     |  __class__ = <type 'type'>
     |      the object's class
    
    class _XReadlines
     |  Represents xreadline objects for ASCII transfers.
     |  
     |  Methods defined here:
     |  
     |  __getitem__(self, index)
     |      Return next line with specified index.
     |  
     |  __init__(self, ftp_file)
     |  
     |  ----------------------------------------------------------------------
     |  Data and non-method functions defined here:
     |  
     |  __doc__ = 'Represents xreadline objects for ASCII transfers.'
     |  
     |  __module__ = 'ftputil'

FUNCTIONS
    lambdatext
    
    lambdatext
    
    _try_with_ioerror(callee, *args, **kwargs)
        Try the callee with the given arguments and map resulting
        exceptions from ftplib.all_errors to FTPIOError.
    
    _try_with_oserror(callee, *args, **kwargs)
        Try the callee with the given arguments and map resulting
        exceptions from ftplib.all_errors to FTPOSError and its
        derived classes.

DATA
    __all__ = ['FTPError', 'FTPOSError', 'TemporaryError', 'PermanentError...
    __file__ = './ftputil.pyc'
    __name__ = 'ftputil'
    __version__ = '1.1 b2'
    nested_scopes = _Feature((2, 1, 0, 'beta', 1), (2, 2, 0, 'alpha', 0), ...

VERSION
    1.1

